apiVersion: v1
kind: Service
metadata:
  name: recognition-service
  labels:
    app: recognition-service
    tier: backend
spec:
    type: LoadBalancer
    ports:
    - port: 5000
    selector:
      app: recognition-service
      tier: backend
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: recognition-service
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: recognition-service
        tier: backend
    spec:
      containers:
        - image: gcr.io/youfie-983ce/github-trevorprater-facenet-service:master
          name: web
          env:
            - name: GET_HOSTS_FROM
              value: dns

            - name: YOUFIE_DB_ADDR
              # Connect to the SQL proxy over the local network on a fixed port.
              # Insert the port number used by your database. 
              value: 0.0.0.0:5432

            # These secrets are required to start the pod.
            # [START cloudsql_secrets]
            - name: YOUFIE_DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: cloudsql
                  key: password
            - name: YOUFIE_DB_USER
              valueFrom:
                secretKeyRef:
                  name: cloudsql
                  key: username

            # [END cloudsql_secrets]
          ports:
            - containerPort: 5000
        # Change [INSTANCE_CONNECTION_NAME] here to include your GCP
        # project, the region of your Cloud SQL instance and the name
        # of your Cloud SQL instance. The format is
        # $PROJECT:$REGION:$INSTANCE
        # Insert the port number used by your database.
        # [START proxy_container]
        - image: b.gcr.io/cloudsql-docker/gce-proxy:1.05
          name: cloudsql-proxy
          command: ["/cloud_sql_proxy", "--dir=/cloudsql",
          "-instances=youfie-983ce:us-east1:youfie-db=tcp:5432",
                    "-credential_file=/secrets/cloudsql/credentials.json"]
          volumeMounts:
            - name: cloudsql-oauth-credentials
              mountPath: /secrets/cloudsql
              readOnly: true
            - name: ssl-certs
              mountPath: /etc/ssl/certs
            - name: cloudsql
              mountPath: /cloudsql
        # [END proxy_container]
      # [START volumes]
      volumes:
        - name: cloudsql-oauth-credentials
          secret:
            secretName: cloudsql-oauth-credentials
        - name: ssl-certs
          hostPath:
            path: /etc/ssl/certs
        - name: cloudsql
          emptyDir:
      # [END volumes]
